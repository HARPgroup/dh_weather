copy(http://water.weather.gov/precip/downloads/2021/08/10/nws_precip_1day_20210810_conus.tif, /tmp)
gdalwarp /tmp/nws_precip_1day_20210810_conus.tif -t_srs EPSG:4326 "/tmp/nws_precip_1day_20210810_conus.tif.conus-4326.tif"
raster2pgsql "/tmp/nws_precip_1day_20210810_conus.tif.conus-4326.tif" tmp_precipgrid > /tmp/tmp_precipgrid.sql
Processing 1/1: /tmp/nws_precip_1day_20210810_conus.tif.conus-4326.tif
echo "drop table tmp_precipgrid" | psql -h dbase2 drupal.dh03 -U drupal
cat /tmp/tmp_precipgrid.sql | psql -h dbase2 drupal.dh03 -U drupal
echo "grant all on table tmp_precipgrid to drupal" | psql -h dbase2 drupal.dh03 -U drupal
Inserted weather record 67418320 for Array
(
    [featureid] => 378700
    [entity_type] => dh_feature
    [tstime] => 1628568000
    [tsendtime] => 1628654400
    [varid] => noaa_precip_raster
)

 update dh_timeseries_weather  set rast = foo.rast  from (  select st_clip(noaa.rast, st_envelope(st_setsrid(b.dh_geofield_geom,4326))) as rast  from dh_feature as a  left outer join field_data_dh_geofield as b  on (    a.hydroid = b.entity_id    and b.entity_type = 'dh_feature'  )  left outer join dh_variabledefinition as c  on (    c.varkey = 'noaa_precip_raster'  )  left outer join tmp_precipgrid as noaa  on (1 = 1)    where b.entity_id is not null    and c.hydroid is not null    and a.hydroid = 378700  ) as foo  where tid = 67418320
configArray
(
    [date] => 2021-08-10
    [featureid] => 378700
    [varkey] => precip_obs_wy2date
    [dataset] => nws_precip_wytd_
    [multiplicity] => wy2date_singular
)

copy(http://water.weather.gov/precip/downloads/2021/08/10/nws_precip_wytd_20210810_conus.tif, /tmp)
gdalwarp /tmp/nws_precip_wytd_20210810_conus.tif -t_srs EPSG:4326 "/tmp/nws_precip_wytd_20210810_conus.tif.conus-4326.tif"
raster2pgsql "/tmp/nws_precip_wytd_20210810_conus.tif.conus-4326.tif" tmp_precipgrid > /tmp/tmp_precipgrid.sql
Processing 1/1: /tmp/nws_precip_wytd_20210810_conus.tif.conus-4326.tif
echo "drop table tmp_precipgrid" | psql -h dbase2 drupal.dh03 -U drupal
cat /tmp/tmp_precipgrid.sql | psql -h dbase2 drupal.dh03 -U drupal
echo "grant all on table tmp_precipgrid to drupal" | psql -h dbase2 drupal.dh03 -U drupal
Inserted weather record 67418321 for Array
(
    [featureid] => 378700
    [entity_type] => dh_feature
    [tstime] => 1601524800
    [tsendtime] => 1628568000
    [varid] => precip_obs_wy2date
)

 update dh_timeseries_weather  set rast = foo.rast  from (  select st_clip(noaa.rast, st_envelope(st_setsrid(b.dh_geofield_geom,4326))) as rast  from dh_feature as a  left outer join field_data_dh_geofield as b  on (    a.hydroid = b.entity_id    and b.entity_type = 'dh_feature'  )  left outer join dh_variabledefinition as c  on (    c.varkey = 'precip_obs_wy2date'  )  left outer join tmp_precipgrid as noaa  on (1 = 1)    where b.entity_id is not null    and c.hydroid is not null    and a.hydroid = 378700  ) as foo  where tid = 67418321
 delete from dh_timeseries_weather  where varid in (select hydroid from dh_variabledefinition where varkey = 'precip_pct_wy2date' )    and entity_type = 'dh_feature'    and featureid in (      select hydroid      from dh_feature      where bundle = 'weather_sensor'        and ftype = 'nws_precip'     )   and tstime = 1601524800    and tsendtime = 1628568000
Rolling Current Water-Year Summary for 2020-10-01 (1601524800) to 2021-08-10 (1628568000)


 insert into dh_timeseries_weather (entity_type, featureid, varid, tstime, tsendtime, rain)  select 'dh_feature', foo.hydroid, var.hydroid as varid, 1601524800, 1628568000,    CASE      WHEN SUM(nml) > 0 THEN 100.0 * SUM(obs) / sum(nml)      ELSE 0   END as pct_normal  from dh_variabledefinition as var left outer join (   select a.hydrocode, to_timestamp(tstime), a.hydroid, st_astext(b.dh_geofield_geom),      CASE        WHEN ST_Value(rast, 1, b.dh_geofield_geom) is null THEN 0        ELSE ST_Value(rast, 1, b.dh_geofield_geom)      END as obs,      CASE        WHEN ST_Value(rast, 2, b.dh_geofield_geom) is null THEN 0        ELSE ST_Value(rast, 2, b.dh_geofield_geom)      END as nml,       CASE        WHEN ST_Value(rast, 4, b.dh_geofield_geom) is null THEN 0         ELSE ST_Value(rast, 4, b.dh_geofield_geom)       END as pct   from dh_feature as a    left outer join field_data_dh_geofield as b    on ( entity_id = a.hydroid      and b.entity_type = 'dh_feature'    )   left outer join dh_timeseries_weather as c    on (     c.varid in (select hydroid from dh_variabledefinition where varkey = 'precip_obs_wy2date' )    )   where a.bundle = 'weather_sensor'      and c.featureid in (       select hydroid        from dh_feature        where hydrocode = 'vahydro_nws_precip_grid'          and bundle = 'landunit'          and ftype = 'nws_precip_grid'     )     and c.entity_type = 'dh_feature'     and a.ftype = 'nws_precip'      and varid in (select hydroid from dh_variabledefinition where varkey = 'precip_obs_wy2date' )      and c.tstime = 1601524800 and c.tsendtime = 1628568000  ) as foo  on (1 = 1)  where var.varkey = 'precip_pct_wy2date'  group by var.hydroid, foo.hydroid
 delete from dh_timeseries_weather  where varid in (select hydroid from dh_variabledefinition where varkey = 'precip_pct_2wy2date' )    and entity_type = 'dh_feature'    and featureid in (      select hydroid      from dh_feature      where bundle = 'weather_sensor'        and ftype = 'nws_precip'     )   and tstime = 1569902400    and tsendtime = 1628568000
Rolling 2-Water-Year Summary for 2019-10-01 to 2020-10-01 and 2020-10-01 to 2021-08-10
 insert into dh_timeseries_weather (entity_type, featureid, varid, tstime, tsendtime, rain)  select 'dh_feature', foo.hydroid, var.hydroid as varid, 1569902400, 1628568000,    CASE      WHEN SUM(nml) > 0 THEN 100.0 * SUM(obs) / sum(nml)      ELSE 0   END as pct_normal  from dh_variabledefinition as var left outer join (   select a.hydrocode, to_timestamp(tstime), a.hydroid, st_astext(b.dh_geofield_geom),      CASE        WHEN ST_Value(rast, 1, b.dh_geofield_geom) is null THEN 0        ELSE ST_Value(rast, 1, b.dh_geofield_geom)      END as obs,      CASE        WHEN ST_Value(rast, 2, b.dh_geofield_geom) is null THEN 0        ELSE ST_Value(rast, 2, b.dh_geofield_geom)      END as nml,       CASE        WHEN ST_Value(rast, 4, b.dh_geofield_geom) is null THEN 0         ELSE ST_Value(rast, 4, b.dh_geofield_geom)       END as pct   from dh_feature as a    left outer join field_data_dh_geofield as b    on ( entity_id = a.hydroid      and b.entity_type = 'dh_feature'    )   left outer join dh_timeseries_weather as c    on (     c.varid in (select hydroid from dh_variabledefinition where varkey = 'precip_obs_wy2date' )    )   where a.bundle = 'weather_sensor'      and c.featureid in (       select hydroid        from dh_feature        where hydrocode = 'vahydro_nws_precip_grid'          and bundle = 'landunit'          and ftype = 'nws_precip_grid'     )     and c.entity_type = 'dh_feature'     and a.ftype = 'nws_precip'      and varid in (select hydroid from dh_variabledefinition where varkey = 'precip_obs_wy2date' )      and (         (c.tstime = 1569902400 and c.tsendtime = 1601438400)         OR         (c.tstime =  1601524800 and c.tsendtime = 1628568000)       )  ) as foo  on (1 = 1)  where var.varkey = 'precip_pct_2wy2date'  and foo.hydroid is not null  group by var.hydroid, foo.hydroid
